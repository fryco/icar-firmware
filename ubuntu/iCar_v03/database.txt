Ref: http://www.yesky.com/imagesnew/software/mysql/manual_Reference.html

insert into `t_log` VALUES ('2011-11-12 06:39:36','128.30.11.21','128.30.11.21','本地IP');

/* database name: icar_v03
 * tables: t_product, t_log, t_encrypt
 * t_product: 
 * SN, char(10): 0  2  P  1 1  A  H  0 0 0
 *               ① ② ③ ④⑤ ⑥ ⑦ ⑧⑨⑩
 *               ① 0:iCar low end, 1: iCar mid end, 2: iCar high end ...
 *               ② revision, 0~9, A~Z, except I,L,O
 *               ③ part, 0:PCB, 1:PCBA, 2:case, 3:GSM antenna ... P:final product
 *               ④⑤ Year
 *               ⑥   Month, 1~9, 10:A, 11:B 12:C
 *               ⑦   Day,   1~9, A~Z, except I,L,O
 *               ⑧⑨⑩ serial number, 0~9, a~z, except i,l,o
 * encrypt_ver, decimal(3): encryption version, 000~999
 * MCU dev_Serial, char(24): ST MCU SN, dev_Serial0 = *(vu32*)(0x1FFFF7E8)...
 * IMEI, decimal(15): International Mobile Equipment Identity
 * IMSI, decimal(15): International Mobile SubscriberIdentification Number
 * mobile, decimal(15): mobile phone number, i.e. 0086 13800 138000
 * produce_date, datetime: produce datetime
 * reg_date, datetime: first register datetime
 * status, enum("un-active", "active", "repaired", "EOL"): EOL:end of life
 * fw_rev, decimal(2): firmware revision, 00~99; hw_rev check sn

 * t_log: 
 * date, INTEGER UNSIGNED: i.e: 1318824621
 *       ref to: http://billauer.co.il/blog/2009/03/mysql-datetime-epoch-unix-time/
 * SN, char(10): i.e: 02P11AH000
 * IP, varchar(15) default NULL: external IP
 * port, SMALLINT ,
 * IP_local, varchar(15) default NULL: internal IP
 * action, enum("login", "logout", "upload", "download", "net_err")
 * status, enum("first_login", "normal", "pwd_error")

2011/12/20 10:32:29 add t_log_conn_test
 * t_log_conn_test: 
 * date, INTEGER UNSIGNED: i.e: 1318824621
 *       ref to: http://billauer.co.il/blog/2009/03/mysql-datetime-epoch-unix-time/
 * SN, char(10): i.e: 02P11AH000
 * IP, varchar(15) default NULL: external IP
 * port, SMALLINT ,
 * IP_local, varchar(15) default NULL: internal IP
 * gsm_signal, tinyint
 * sequence, SMALLINT

2012/1/18 16:49:08 add t_log_command
 * t_log_command: 
 * date, INTEGER UNSIGNED: i.e: 1318824621
 *       ref to: http://billauer.co.il/blog/2009/03/mysql-datetime-epoch-unix-time/
 * SN, char(10): i.e: 02P11AH000
 * IP, varchar(15) default NULL: external IP
 * port, SMALLINT ,
 * cmd_seq, tinyint
 * cmd_pcb, tinyint
 * cmd_len, SMALLINT
 * cmd_str, varchar(4096)

把sequence 不连续的找出来：
SELECT FROM_UNIXTIME( date ), sequence
FROM t_log_conn_test t1
WHERE NOT EXISTS (

SELECT sequence
FROM t_log_conn_test t2
WHERE t2.sequence = t1.sequence +1
)
AND LENGTH( sequence ) <5
ORDER BY sequence, date DESC
LIMIT 0 , 30


create table t_log9(
`date` int unsigned NOT NULL COMMENT 'FROM_UNIXTIME(date)',
`IP_local` varchar(15) default NULL  COMMENT 'internal IP',
`action` enum('login','logout')
)ENGINE=MyISAM DEFAULT CHARSET=gbk;

create table product4(
`SN` char(10) NOT NULL COMMENT 'Product serial numble',
`encrypt_ver` decimal(3) NOT NULL COMMENT 'encryption version',
`dev_Serial` char(24) NOT NULL COMMENT 'MCU SN'
)ENGINE=MyISAM DEFAULT CHARSET=gbk;

insert into `t_product` VALUES ('02P11AH003','01','001','D335FF333732473143022475','732473143022475','732473143022475','13800138000','1319444768','1309444768','1');

SELECT FROM_UNIXTIME( produce_date ) , `SN` , `mobile`
FROM `t_product`
ORDER BY produce_date DESC
LIMIT 0 , 30

SELECT FROM_UNIXTIME( date ) , `IP` , `port`
FROM `t_log`
ORDER BY date DESC
LIMIT 0 , 30

SELECT FROM_UNIXTIME( date ) , `signal_seq` , `IP` , `port`, `IP_local`, `gsm_signal`
FROM `t_log_signal`
ORDER BY date DESC
LIMIT 0 , 30

SELECT FROM_UNIXTIME( date ) , `SN` , `signal_seq` , `gsm_signal`
FROM `t_log_signal`
WHERE SN='02P1007324'
ORDER BY date DESC

SELECT FROM_UNIXTIME( date ) , `SN` ,`IP` , `port` , `IP_local`, `OSTime`
FROM `t_log_ip`
ORDER BY date DESC

SELECT FROM_UNIXTIME( date ) , `IP` , `port` , `cmd_seq` ,char( cmd_pcb ) , `cmd_len` , `cmd_str`
FROM `t_log_command`
WHERE date >1326954101
ORDER BY date DESC

SELECT `ID` , FROM_UNIXTIME( date ) , `SN` , `cmd_seq` , char( cmd_pcb ), `cmd_str`, `tx_len`
FROM `t_log_command_s`
ORDER BY date DESC
LIMIT 0 , 30

/**** insert into ip_address_varbinary values ****/
insert ip_address_varbinary values(
cast( convert(tinyint, parsename(@ip, 4)) as varbinary)+
cast( convert(tinyint, parsename(@ip, 3)) as varbinary)+
cast( convert(tinyint, parsename(@ip, 2)) as varbinary)+
cast( convert(tinyint, parsename(@ip, 1)) as varbinary)
)


MYSQL各字段的长度是多少
2007年07月18日 星期三 09:02

序号 列类型 需要的存储量
1 TINYINT 1 字节
2 SMALLINT 2 个字节
3 MEDIUMINT 3 个字节
4 INT 4 个字节
5 INTEGER 4 个字节
6 BIGINT 8 个字节
7 FLOAT(X) 4 如果 X < = 24 或 8 如果 25 < = X < = 53
8 FLOAT 4 个字节
9 DOUBLE 8 个字节
11 DOUBLE PRECISION   8 个字节
12 REAL 8 个字节
13 DECIMAL(M,D) M字节(D+2 , 如果M < D)
14 NUMERIC(M,D)   M字节(D+2 , 如果M < D)

日期和时间类型
序号 列类型 需要的存储量
1 DATE 3 个字节
2 DATETIME   8 个字节
3 TIMESTAMP 4 个字节
4 TIME 3 个字节
5 YEAR   1 字节

串类型
序号 列类型 需要的存储量
1 CHAR(M)   M字节，1 <= M <= 255
2 VARCHAR(M) L+1 字节, 在此L <= M和1 <= M <= 255
3 TINYBLOB,TINYTEXT L+1 字节, 在此L< 2 ^ 8
4 BLOB, TEXT L+2 字节, 在此L< 2 ^ 16
5 MEDIUMBLOB,
MEDIUMTEXT L+3 字节, 在此L< 2 ^ 24
6 LONGBLOB, LONGTEXT L+4 字节, 在此L< 2 ^ 32
7 ENUM('value1','value2',...) 1 或 2 个字节, 取决于枚举值的数目(最大值65535)
8 SET('value1','value2',...) 1，2，3，4或8个字节, 取决于集合成员的数量(最多64个成员)
 */
